$Id: BackwardsCompatibility.txt,v 1.2 2006/09/21 22:24:08 herzogs Exp $


We have a number of customers who use the upload interface to 
receive data from the AcquiSuite and AcquiLite data acquisition servers.
With that in mind, we take the issue of backwards compatibility very 
seriously.  

For the most part, changes to the upload interface are limited to 
either adding additional information or new log file formats for new meters.

As we add drivers to the AcquiSuite to support new modbus devices, 
we must add new "DEVICECLASS" parameters and associated 
meter log file formats.  These updates should not require any changes
to your system unless you wish to use a previously unsupported meter.

As for additional information about the system, we do add additional 
HTTP form variables to the HTTP post message from time to time.  
Every http processing system that I am aware of (such as php, asp)
will allow the system to read in all the variables, and then let your
script access them by name.  This effectively allows you to ignore
the variables that you don't care about.  Thus, adding form variables
should be transparent to older server systems.

The other area we may add information to is the ini files exchanged 
with the AcquiSuite.  If you receive INI files, the names and functions
of existing parameters in the INI files should remain the same, however
new ones may be added in the future.  Again, the best way to handle
this is to ignore variables you do not care about.

Only one substantive change has been made thus far; with the 
introduction of the AcquiLite system in 2004, we started populating
invalid reading fields in the log file with a blank cell (two commas with
no whitespace in between).  Older AcquiSuite systems would provide
the word "NULL" in this field.  This year, we expect to convert
the AcquiSuite firmware to do the same, and remove the word NULL
from the csv log data sent to your server.  This has been done to 
extend the data storage capacity of the AcquiSuite and AcquiLite. 
This has also been documented in the sample scripts we send out
and advises that the script on your server should be able to handle
both notations of an invalid reading. 


Best practices:

- expect new file types to show up in the DEVICECLASS field, as new drivers 
  are written and incorporated 

- Ignore MODE=(parameter) posts where the parameter is not one you 
  wish to process.  New MODE types may be added in the future, your server
  should gracefully ignore these if you do not wish to process them.

- Configuration files are in the format of "PARAMETER=VALUE", however
  the lines are not in any specific order.   New parameters may be added, 
  at any time, as needed by the AcquiSuite.  The AcquiSuite should 
  maintain backwards compatibilty for the older parameter sets, and 
  ignore any unrecoginzed parameters in the INI file.

- Ignore unrecognized HTTP/POST form variables. New parameters may be
  added in the future, however older form variables will be maintained
  unless there is sufficient reason to discontinue their use. 

