$Id: asp_notes.txt,v 1.3 2006/02/03 22:40:16 herzogs Exp $

Author:  Stephen Herzog, for Obvius Holdings LLC,  2006


This document discusses topics related to ASP scripting and
how to interface the AcquiSuite and AcquiLite log file upload
to an ASP server side script. 


----- How the data is encoded ----- 

The AcquiSuite and AcquiLite send data to the webserver using a 
multi-part encoding method.  This requires several things.  
First the AcquiSuite will include an HTTP header that shows the 
boundry between form elements.  

    Content-Type: multipart/form-data; boundary=---------1235AB7

Second, each element of the form is encoded with this bountry. 

    ---------1235AB7
    Content-Disposition: form-data; name="MODE"
    
    LOGFILEUPLOAD
    ---------1235AB7

For a complete view of what is sent, take a look a the file 
"post-acquisuite.txt" in the test forms directory.

You can send the POST data to a webserver with a standard 
webbrowser (MSIE, FireFox, etc) using the "endType" element
in a form tag as shown in the following example.

    <FORM method="post" encType="multipart/form-data" action="Upload.asp">
       <INPUT type="File" name="File1">
       <INPUT type="Submit" value="Upload">
    </FORM>

The encType element causes your browser to use the same 
multipart encoding including the multipart/form-data 
content type line in the HTTP header as shown above. 

A html document form shows this by example in the 
logfileupload.html file in the test forms subdirectory.

Without the encType element, the browser simply encodes the 
variables similar to the way variables are included in a GET 
request.  The body of the POST message would look like 
the following:

     MODE=LOGFILEUPLOAD&SERIALNUMBER=1234567889

If the POST message only contained form variables, this 
encoding technique would be sufficient.  Because the 
AcquiSuite and AcquiLite are attaching an entire log 
file as one element, the multipart/form-data technique
is required. 

The multipart/form-data technique is used by most webservers
that need to receive files from a browser.  Any website
that allows you to upload a picture to your online account
(such as a blog, or web-mail site) uses this technique.


----- How ASP processes form variables ----- 

The reason this is important is that multipart/form-data 
is not the default way which browsers send POST data to 
a webserver, however every (major) browser has the ability
to send multipart/form-data if the encType form attribute
is specified. 

As near as I can tell, the ASP Request.Form object cannot 
be used with the multipart/form-data type.

So, to decode the multipart/form-data encoded POST message
from a browser or the AcquiSuite, a third party script 
is required.  Several are available, however the tool 
"Upload files without COM v2" was used in the included
example. 

----- Setup the process_logfileupload.asp example ----- 

In the example script process_logfileupload.asp provided
with this document, we show how to use the third party
script "Upload files without COM v2" to parse the log 
file and form variables from the POST data.   A zip file
with the original files and documentation for this is
provided.  You will need to take several files from this
zip file archive an include them with the example script.

To use the sample script:
1) place process_logfileupload.asp, clsUpload.asp, and 
   clsField.asp in the same directory on your webserver.

2) create a subdirectory "c:\asdata\" and set permissions
   to allow full read/write access. 

3) edit the logfileupload.html file in the testforms 
   directory.  Change the form action url to refer to 
   the process_logfileupload.asp on your webserver. 

4) Test the form with a webbrowser.  You should see 
   a response page that shows all the form variables
   that were submitted, and the attached log file should
   appear in c:\asdata. 

5) Try the same test using an AcquiSuite.  Simply use
   the URL from step 3 above on the AcquiSuite logfile
   setup/upload page, and click the upload-now button.

----- How the process_logfileupload.asp example works  ----- 

The example script has several main steps as covered below. 
First is the copyright and notes in a long comment block. 

The first main entry refers to a codepage.  
    <% @ CodePage = 1252 %>

If the Codepage 1252 is not included, the clsUpload.asp 
file gives an error about Midb function type mismatch. 
The exact error on our server was:

    Microsoft VBScript runtime  (0x800A0005)
    Invalid procedure call or argument: 
    'MidB'/aquilite/clsUpload.asp, line 132

Adding the codepage notation should solve this issue.

Next we have an INCLUDE line to bring the library in.
This include line should be after the codepage entry.

Next we create the objUpload object.  

    Set objUpload = New clsUpload

This is actually where most of the action happens.  The
clsupload object, when created, parses the data stream 
and extracts all the form variables and log file.   Once 
extracted, these can be accessed by refering to them 
in the object by name. 

    Response.Write "MODE=" & objUpload.Fields("MODE").value

Here we show how to extract the value of the MODE form 
variable.   In this example, the value should be 
"UPLOADLOGFILE".   This technique can be used to 
locate any form variable. 

Last, we generate a file name to save the log file, 
and save the log file with the following command.

    objUpload("LOGFILE").SaveAs strPath

This writes out the detached log data to the file.
Note: the default directory is c:\asdata\ so you 
may need to create this directory or change the 
path name.  In either case, full write permissions
are required to operate. 


----- Other sources of information and ASP code ----- 

Upload Files Without COM v2  By: Lewis E. Moten III 
Decodes both files and form elements, used in the AcquiSuite
example script included with this document.

    http://www.Planet-Source-Code.com/vb/scripts/ShowCode.asp?txtCodeId=7361&lngWId=4


Another upload object script, with lots of documentation 
about how ASP handles (or doesn't handle) multipart/form-data
This asp script uses COM.

    http://www.codeproject.com/asp/aspupl.asp


An article on file uploads with ASP.  Provides a pure ASP
script solution to receive uploaded files. 

    http://www.asp101.com/articles/jacob/scriptupload.asp

This includes some code to parse uploaded files in asp.


Microsoft ASP.NET has some builtin method to handle uploaded 
files. This technique is not covered by this document.  Documentation
is available from Microsoft at:

    http://support.microsoft.com/default.aspx?scid=kb;en-us;323245

Discussion of ASP.NET is beyond the scope of this document 
however. 


-----  ----- 


LF = ChrB(Asc(vbLf))    ' vbLf      Line Feed character.

