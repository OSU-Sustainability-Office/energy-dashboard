AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Energy Dashboard

  Backend routes used by the OSU Energy Dashboard

Globals:
  Function:
    Timeout: 15
    Runtime: nodejs18.x
  Api:
    # enable CORS; to make more specific, change the origin wildcard
    # to a particular domain name, e.g. "'www.example.com'"
    Cors:
      AllowMethods: "'POST, GET, PUT'"
      AllowHeaders: "'X-Forwarded-For'"
      AllowOrigin: "'oregonstate.edu'"
      MaxAge: "'600'"
      AllowCredentials: True
    BinaryMediaTypes:
      - image~1gif
      - image~1png
      - image~1jpeg
      - application/octet-stream
      - multipart/form-data
  HttpApi:
    CorsConfiguration:
      AllowMethods:
        - GET
        - POST
        - PUT
      AllowHeaders:
        - "'X-Forwarded-For'"
      AllowOrigins:
        - 'https://dashboard.sustainability.oregonstate.edu'
      MaxAge: 600
      AllowCredentials: True
Parameters:
  LambdaCommonLayer:
    Type: String
    Default: arn:aws:lambda:us-west-2:005937143026:layer:LambdaCommonLayer:103

Resources:
  SystemTime:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: now.systemtime
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /systemtime
            Method: get
  BuildingAll:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: building.all
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /allbuildings
            Method: get
  BuildingPutGeoJSON:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: building.putGeoJSON
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /buildinggeojson
            Method: put
  MeterData:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: meter.data
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /data
            Method: get
  MeterMultiMeterData:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 256
      CodeUri: app/
      Handler: meter.multiMeterData
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /multiMeterData
            Method: post
  # For newer meter types
  MeterUpload:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 128
      CodeUri: app/
      Handler: meter.upload
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /upload
            Method: post
  # Legacy Data Upload Route (still works for Aquisuites)
  MeterPost:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 128
      CodeUri: app/
      Handler: meter.post
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /meter
            Method: post
  CampaignGetAll:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: campaign.all
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /campaigns
            Method: get
  ppExclude:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: pacific_power_exclusion.get
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /ppexclude
            Method: get
  ppUpload:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: pacific_power_exclusion.post
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /ppupload
            Method: post
  ppRecent:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      CodeUri: app/
      Handler: pacific_power_recent.get
      Layers:
        - !Ref LambdaCommonLayer
        - !Ref EnergyModelLayer
      Events:
        Building:
          Type: Api
          Properties:
            Path: /pprecent
            Method: get
  EnergyModelLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: EnergyModelLayer
      Description: DB Model Defs
      ContentUri: dependencies/
      CompatibleRuntimes:
        - nodejs6.10
        - nodejs8.10
        - nodejs10.x
        - nodejs12.x
        - nodejs16.x
        - nodejs18.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
